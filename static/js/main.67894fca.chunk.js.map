{"version":3,"sources":["actions/crypto.js","actions/filter.js","components/CryptoTable/index.jsx","components/ConverterBlock/index.jsx","filterSelect.js","styles.js","App.jsx","reducers/crypto.js","reducers/index.js","index.js","store/store.js"],"names":["setCrypto","crypto","type","payload","setFilter","filter","CryptoTable","items","classes","TableContainer","className","bitcoinTable","component","Paper","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","length","map","coin","key","volume24Hour","scope","cryptoIcon","src","imageUrl","alt","name","fullName","price","defaultProps","ConverterBlock","filterSelect","setFilterReducer","React","useState","paper","cryptoInputWrap","cryptoImg","enableBackground","height","viewBox","width","xmlns","d","fill","FormControl","currencyType","InputLabel","id","Select","value","onChange","e","target","text","MenuItem","FILTERS_BTN","useStyles","makeStyles","theme","root","padding","spacing","textAlign","color","palette","secondary","display","alignItems","justifyContent","marginTop","marginBottom","currencyInput","minWidth","marginRight","sortBy","filterBy","orderBy","connect","isReady","dispatch","bindActionCreators","cryptoActions","filterActions","useEffect","axios","get","then","coins","data","Data","CoinInfo","Name","FullName","ImageUrl","Number","RAW","USD","PRICE","toFixed","parseInt","VOLUME24HOUR","Container","maxWidth","Grid","container","item","xs","initialState","combineReducers","state","action","store","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67894fca.chunk.js","sourcesContent":["export const setCrypto = (crypto) => ({\r\n    type: 'SET_CRYPTO',\r\n    payload: crypto\r\n})","export const setFilter = (filter) => ({\r\n    type: \"SET_FILTER\",\r\n    payload: filter\r\n})","import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst CryptoTable = ({items, classes}) => {\r\n\r\n    return (\r\n        <TableContainer className={classes.bitcoinTable} component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    <TableCell></TableCell>\r\n                    <TableCell align=\"left\">FullName</TableCell>\r\n                    <TableCell align=\"left\">Name</TableCell>\r\n                    <TableCell align=\"left\">Price</TableCell>\r\n                    <TableCell align=\"left\">volume</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {!items.length ? \"Загрузка...\" : items.map((coin) => (\r\n                        \r\n                        <TableRow key={coin.volume24Hour}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                            <img className={classes.cryptoIcon} src={coin.imageUrl} alt=\"cryptoImg\"/>\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">{coin.name}</TableCell>\r\n                            <TableCell align=\"left\">{coin.fullName}</TableCell>\r\n                            <TableCell align=\"left\">$ {coin.price}</TableCell>\r\n                            <TableCell align=\"left\">$ {coin.volume24Hour}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nCryptoTable.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    classes: PropTypes.object\r\n}\r\n\r\nCryptoTable.defaultProps = {\r\n    items: {},\r\n    classes: {}\r\n}\r\n\r\nexport default CryptoTable;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Select from '@material-ui/core/Select'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\n\r\nconst ConverterBlock = ({classes, filterSelect, setFilterReducer}) => {\r\n    const [filter, setFilter] = React.useState('all')\r\n    \r\n\r\n    const updateSelectFilter = (e) => {\r\n        setFilter(e.target.value)\r\n        setFilterReducer(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.cryptoInputWrap}>\r\n                <svg className={classes.cryptoImg} enableBackground=\"new 0 0 64 64\" height=\"512\" viewBox=\"0 0 64 64\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><g><g><g><path d=\"m32 45c-7.168 0-13-5.832-13-13s5.832-13 13-13 13 5.832 13 13-5.832 13-13 13z\" fill=\"#f0bc5e\"/></g></g><g><path d=\"m13 9c.551 0 1 .449 1 1h2c0-1.654-1.346-3-3-3v-2h-2v2h-3v3c0 1.654 1.346 3 3 3h2c.551 0 1 .449 1 1v1h-3c-.551 0-1-.449-1-1h-2c0 1.654 1.346 3 3 3v2h2v-2h3v-3c0-1.654-1.346-3-3-3h-2c-.551 0-1-.449-1-1v-1z\"/><path d=\"m12 1c-6.065 0-11 4.935-11 11s4.935 11 11 11 11-4.935 11-11-4.935-11-11-11zm0 20c-4.962 0-9-4.038-9-9s4.038-9 9-9 9 4.038 9 9-4.038 9-9 9z\"/><path d=\"m12 41c-6.065 0-11 4.935-11 11s4.935 11 11 11 11-4.935 11-11-4.935-11-11-11zm0 20c-4.962 0-9-4.038-9-9s4.038-9 9-9 9 4.038 9 9-4.038 9-9 9z\"/><path d=\"m57 28c0-.352.072-.686.184-1h-5.598l-2 2h-4.949c.154.65.26 1.317.313 2h5.465l2-2h4.77c-.113-.314-.185-.648-.185-1z\"/><path d=\"m52.414 35-2-2h-5.465c-.052.683-.158 1.35-.313 2h4.949l2 2h5.598c-.111-.314-.183-.648-.183-1s.072-.686.184-1z\"/><path d=\"m29 19.363c.65-.154 1.317-.26 2-.313v-5.465l-2-2v-4.77c-.314.113-.648.185-1 .185s-.686-.072-1-.184v5.598l2 2z\"/><path d=\"m35 6.816v4.77l-2 2v5.465c.683.052 1.35.158 2 .313v-4.949l2-2v-5.599c-.314.112-.648.184-1 .184s-.686-.072-1-.184z\"/><path d=\"m12.414 37 2-2h4.949c-.154-.65-.26-1.317-.313-2h-5.465l-2 2h-4.77c.113.314.185.648.185 1s-.072.686-.184 1z\"/><path d=\"m11.586 29 2 2h5.465c.052-.683.158-1.35.313-2h-4.949l-2-2h-5.599c.112.314.184.648.184 1s-.072.686-.184 1z\"/><path d=\"m35 44.637c-.65.154-1.317.26-2 .313v5.465l2 2v4.77c.314-.113.648-.185 1-.185s.686.072 1 .184v-5.598l-2-2z\"/><path d=\"m29 49.586-2 2v5.598c.314-.112.648-.184 1-.184s.686.072 1 .184v-4.77l2-2v-5.465c-.683-.052-1.35-.158-2-.313z\"/><path d=\"m33 25v-2h-2v2h-2v14h2v2h2v-2c2.206 0 4-1.794 4-4 0-1.193-.525-2.267-1.357-3 .832-.733 1.357-1.807 1.357-3 0-2.206-1.794-4-4-4zm0 12h-2v-4h2c1.103 0 2 .897 2 2s-.897 2-2 2zm0-6h-2v-4h2c1.103 0 2 .897 2 2s-.897 2-2 2z\"/><path d=\"m52 23c6.065 0 11-4.935 11-11s-4.935-11-11-11-11 4.935-11 11 4.935 11 11 11zm0-20c4.962 0 9 4.038 9 9s-4.038 9-9 9-9-4.038-9-9 4.038-9 9-9z\"/><path d=\"m52 41c-6.065 0-11 4.935-11 11s4.935 11 11 11 11-4.935 11-11-4.935-11-11-11zm0 20c-4.962 0-9-4.038-9-9s4.038-9 9-9 9 4.038 9 9-4.038 9-9 9z\"/><path d=\"m52 19c2.206 0 4-1.794 4-4h-2c0 1.103-.897 2-2 2s-2-.897-2-2h2v-2h-2v-2h2v-2h-2c0-1.103.897-2 2-2s2 .897 2 2h2c0-2.206-1.794-4-4-4s-4 1.794-4 4h-2v2h2v2h-2v2h2c0 2.206 1.794 4 4 4z\"/><path d=\"m56.707 46.707-1.414-1.414-3.293 3.293-3.293-3.293-1.414 1.414 3.707 3.707v.586h-2v2h2v2h-2v2h2v2h2v-2h2v-2h-2v-2h2v-2h-2v-.586z\"/><path d=\"m8 50v1h-2v2h2v6h7v-2h-5v-4h2v-2h-2v-1c0-1.654 1.346-3 3-3h2v-2h-2c-2.757 0-5 2.243-5 5z\"/></g><g><g><path d=\"m60 31c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z\" fill=\"#f0bc5e\"/></g></g><g><g><path d=\"m60 39c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z\" fill=\"#f0bc5e\"/></g></g><g><g><path d=\"m28 7c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z\" fill=\"#f0bc5e\"/></g></g><g><g><path d=\"m36 7c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z\" fill=\"#f0bc5e\"/></g></g><g><g><path d=\"m4 39c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z\" fill=\"#f0bc5e\"/></g></g><g><g><path d=\"m4 31c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z\" fill=\"#f0bc5e\"/></g></g><g><g><path d=\"m36 63c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z\" fill=\"#f0bc5e\"/></g></g><g><g><path d=\"m28 63c-1.654 0-3-1.346-3-3s1.346-3 3-3 3 1.346 3 3-1.346 3-3 3z\" fill=\"#f0bc5e\"/></g></g></g></svg>\r\n                <FormControl className={classes.currencyType}>\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">Сортировка:</InputLabel>\r\n                    <Select value={filter} onChange={updateSelectFilter}>\r\n                        {filterSelect.map(({text, id}) => (\r\n                            <MenuItem value={id} key={id}> {text} </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nConverterBlock.propTypes = {\r\n    classes: PropTypes.object,\r\n    filterSelect: PropTypes.array,\r\n    setFilterReducer: PropTypes.func\r\n}\r\n\r\nConverterBlock.defaultProps = {\r\n    classes: {},\r\n    filterSelect: [],\r\n    setFilterReducer: () => {}\r\n}\r\n\r\nexport default ConverterBlock","export const FILTERS_BTN = [\r\n    {\r\n        text: 'Все',\r\n        id: 'all',\r\n    },\r\n    {\r\n        text: 'Наименования',\r\n        id: 'name',\r\n    },\r\n    {\r\n        text: 'Цена',\r\n        id: 'price'\r\n    }\r\n];","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(10),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    cryptoInputWrap: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-around\",\r\n        marginTop: 20,\r\n        marginBottom: 20\r\n    },\r\n    cryptoImg: {\r\n        width: 100,\r\n        height: 100\r\n    },\r\n    currencyInput: {\r\n        minWidth: 'calc(70% - 10px)',\r\n        marginRight: 10\r\n    },\r\n    currencyType: {\r\n        minWidth: '20%',\r\n    },\r\n    table: {\r\n        minWidth: 650\r\n    },\r\n    bitcoinTable: {\r\n        height: 600\r\n    },\r\n    cryptoIcon: {\r\n        width: '16px',\r\n        height: '16px'\r\n    }\r\n}));\r\n\r\nexport default useStyles\r\n      \r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport * as cryptoActions from './actions/crypto'\r\nimport * as filterActions from './actions/filter'\r\n\r\nimport orderBy from 'lodash/orderBy'\r\n\r\nimport {CryptoTable, ConverterBlock} from './components'\r\nimport {FILTERS_BTN} from './filterSelect'\r\n\r\nimport axios from 'axios';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useStyles from './styles'\r\n\r\nfunction App({crypto, isReady, setCrypto, setFilter}) {\r\n\r\n\r\n  React.useEffect(() => {\r\n    axios.get('https://min-api.cryptocompare.com/data/top/totalvolfull?limit=50&tsym=USD')\r\n    .then(({data}) => {\r\n      const coins = data.Data.map((coin) => {\r\n          const obj = {\r\n              name: coin.CoinInfo.Name,\r\n              fullName: coin.CoinInfo.FullName,\r\n              imageUrl: `https://www.cryptocompare.com${coin.CoinInfo.ImageUrl}`,\r\n              price: Number(coin.RAW.USD.PRICE.toFixed(2)),\r\n              volume24Hour: parseInt(coin.RAW.USD.VOLUME24HOUR)\r\n          }\r\n          return obj\r\n      })\r\n      setCrypto(coins)\r\n    })\r\n  }, [setCrypto])\r\n\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.root} maxWidth=\"lg\">\r\n      <Grid container spacing={1}>\r\n        <h1></h1>\r\n        <Grid item xs={12}>\r\n          <ConverterBlock setFilterReducer={setFilter} classes={classes} filterSelect={FILTERS_BTN}/>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CryptoTable items={crypto} classes={classes}/>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst sortBy = (crypto, filterBy) => {\r\n\r\n  switch (filterBy) {\r\n    case 'all' :\r\n      return crypto\r\n    case 'name' : \r\n      return orderBy(crypto, 'fullName', 'asc')\r\n    case 'price' : \r\n      return orderBy(crypto , 'price', 'desc')\r\n    default: \r\n      return crypto\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({crypto}) => ({\r\n  crypto: sortBy(crypto.items, crypto.filterBy),\r\n  isReady: crypto.isReady\r\n})\r\n\r\nconst mapDispatchToProps  = dispatch => ({\r\n  ...bindActionCreators(cryptoActions, dispatch),\r\n  ...bindActionCreators(filterActions, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const initialState = {\r\n    isReady: false,\r\n    items: [],\r\n    filterBy: 'all'\r\n}\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_CRYPTO\":\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isReady: true\r\n            }\r\n        case \"SET_FILTER\":\r\n            return {\r\n                ...state,\r\n                filterBy: action.payload,\r\n            }\r\n        case \"SET_IS_READY\":\r\n            return {\r\n                ...state,\r\n                isReady: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport crypto from './crypto'\r\n\r\n\r\nexport default combineReducers({\r\n    crypto,\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport createStore from './store/store'\r\n\r\nconst store = createStore()\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","import {createStore, applyMiddleware} from 'redux'\r\nimport logger from 'redux-logger'\r\nimport rootReducer from '../reducers'\r\n\r\n\r\n// const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport default () => {\r\n    const store = createStore(rootReducer, applyMiddleware(logger))\r\n    return store\r\n}\r\n"],"sourceRoot":""}